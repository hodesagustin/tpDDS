#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrganizadorFutbol5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="DDS2014")]
	public partial class DataBaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdministrador(Administrador instance);
    partial void UpdateAdministrador(Administrador instance);
    partial void DeleteAdministrador(Administrador instance);
    partial void InsertRechazo(Rechazo instance);
    partial void UpdateRechazo(Rechazo instance);
    partial void DeleteRechazo(Rechazo instance);
    partial void InsertCalificacion(Calificacion instance);
    partial void UpdateCalificacion(Calificacion instance);
    partial void DeleteCalificacion(Calificacion instance);
    partial void InsertCalificacionPendiente(CalificacionPendiente instance);
    partial void UpdateCalificacionPendiente(CalificacionPendiente instance);
    partial void DeleteCalificacionPendiente(CalificacionPendiente instance);
    partial void InsertInfraccion(Infraccion instance);
    partial void UpdateInfraccion(Infraccion instance);
    partial void DeleteInfraccion(Infraccion instance);
    partial void InsertInscripcion(Inscripcion instance);
    partial void UpdateInscripcion(Inscripcion instance);
    partial void DeleteInscripcion(Inscripcion instance);
    partial void InsertInscripcionPendiente(InscripcionPendiente instance);
    partial void UpdateInscripcionPendiente(InscripcionPendiente instance);
    partial void DeleteInscripcionPendiente(InscripcionPendiente instance);
    partial void InsertJugador(Jugador instance);
    partial void UpdateJugador(Jugador instance);
    partial void DeleteJugador(Jugador instance);
    partial void InsertJugadorAmigo(JugadorAmigo instance);
    partial void UpdateJugadorAmigo(JugadorAmigo instance);
    partial void DeleteJugadorAmigo(JugadorAmigo instance);
    partial void InsertPartido(Partido instance);
    partial void UpdatePartido(Partido instance);
    partial void DeletePartido(Partido instance);
    partial void InsertPartidoEquipo(PartidoEquipo instance);
    partial void UpdatePartidoEquipo(PartidoEquipo instance);
    partial void DeletePartidoEquipo(PartidoEquipo instance);
    #endregion
		
		public DataBaseDataContext() : 
				base(global::OrganizadorFutbol5.Properties.Settings.Default.DDS2014ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataBaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Administrador> Administradors
		{
			get
			{
				return this.GetTable<Administrador>();
			}
		}
		
		public System.Data.Linq.Table<Rechazo> Rechazos
		{
			get
			{
				return this.GetTable<Rechazo>();
			}
		}
		
		public System.Data.Linq.Table<Calificacion> Calificacions
		{
			get
			{
				return this.GetTable<Calificacion>();
			}
		}
		
		public System.Data.Linq.Table<CalificacionPendiente> CalificacionPendientes
		{
			get
			{
				return this.GetTable<CalificacionPendiente>();
			}
		}
		
		public System.Data.Linq.Table<Infraccion> Infraccions
		{
			get
			{
				return this.GetTable<Infraccion>();
			}
		}
		
		public System.Data.Linq.Table<Inscripcion> Inscripcions
		{
			get
			{
				return this.GetTable<Inscripcion>();
			}
		}
		
		public System.Data.Linq.Table<InscripcionPendiente> InscripcionPendientes
		{
			get
			{
				return this.GetTable<InscripcionPendiente>();
			}
		}
		
		public System.Data.Linq.Table<Jugador> Jugadors
		{
			get
			{
				return this.GetTable<Jugador>();
			}
		}
		
		public System.Data.Linq.Table<JugadorAmigo> JugadorAmigos
		{
			get
			{
				return this.GetTable<JugadorAmigo>();
			}
		}
		
		public System.Data.Linq.Table<Partido> Partidos
		{
			get
			{
				return this.GetTable<Partido>();
			}
		}
		
		public System.Data.Linq.Table<PartidoEquipo> PartidoEquipos
		{
			get
			{
				return this.GetTable<PartidoEquipo>();
			}
		}
		
		public System.Data.Linq.Table<Promedio_todos_los_partido> Promedio_todos_los_partidos
		{
			get
			{
				return this.GetTable<Promedio_todos_los_partido>();
			}
		}
		
		public System.Data.Linq.Table<Promedio_Ultimo_Partido> Promedio_Ultimo_Partidos
		{
			get
			{
				return this.GetTable<Promedio_Ultimo_Partido>();
			}
		}
	}
	
	[Table(Name="dds_esquema.Administrador")]
	public partial class Administrador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _Nombre;
		
		private string _Mail;
		
		private EntitySet<Partido> _Partidos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    #endregion
		
		public Administrador()
		{
			this._Partidos = new EntitySet<Partido>(new Action<Partido>(this.attach_Partidos), new Action<Partido>(this.detach_Partidos));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Mail", DbType="NVarChar(100)")]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[Association(Name="Administrador_Partido", Storage="_Partidos", ThisKey="ID", OtherKey="AdministradorID")]
		public EntitySet<Partido> Partidos
		{
			get
			{
				return this._Partidos;
			}
			set
			{
				this._Partidos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Partidos(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = this;
		}
		
		private void detach_Partidos(Partido entity)
		{
			this.SendPropertyChanging();
			entity.Administrador = null;
		}
	}
	
	[Table(Name="dds_esquema.Rechazo")]
	public partial class Rechazo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PartidoID;
		
		private string _PersonaNombre;
		
		private System.DateTime _Fecha;
		
		private string _Motivo;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnPersonaNombreChanging(string value);
    partial void OnPersonaNombreChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public Rechazo()
		{
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_PersonaNombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonaNombre
		{
			get
			{
				return this._PersonaNombre;
			}
			set
			{
				if ((this._PersonaNombre != value))
				{
					this.OnPersonaNombreChanging(value);
					this.SendPropertyChanging();
					this._PersonaNombre = value;
					this.SendPropertyChanged("PersonaNombre");
					this.OnPersonaNombreChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Storage="_Motivo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[Association(Name="Partido_Rechazo", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Rechazos.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Rechazos.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.Calificacion")]
	public partial class Calificacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CalificadorID;
		
		private decimal _PartidoID;
		
		private decimal _JugadorID;
		
		private byte _Puntaje;
		
		private string _Descripcion;
		
		private EntityRef<Jugador> _Jugador;
		
		private EntityRef<Jugador> _Jugador1;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalificadorIDChanging(decimal value);
    partial void OnCalificadorIDChanged();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    partial void OnPuntajeChanging(byte value);
    partial void OnPuntajeChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Calificacion()
		{
			this._Jugador = default(EntityRef<Jugador>);
			this._Jugador1 = default(EntityRef<Jugador>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_CalificadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CalificadorID
		{
			get
			{
				return this._CalificadorID;
			}
			set
			{
				if ((this._CalificadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalificadorIDChanging(value);
					this.SendPropertyChanging();
					this._CalificadorID = value;
					this.SendPropertyChanged("CalificadorID");
					this.OnCalificadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_Puntaje", DbType="TinyInt NOT NULL")]
		public byte Puntaje
		{
			get
			{
				return this._Puntaje;
			}
			set
			{
				if ((this._Puntaje != value))
				{
					this.OnPuntajeChanging(value);
					this.SendPropertyChanging();
					this._Puntaje = value;
					this.SendPropertyChanged("Puntaje");
					this.OnPuntajeChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="Jugador_Calificacion", Storage="_Jugador", ThisKey="CalificadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.Calificacions.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.Calificacions.Add(this);
						this._CalificadorID = value.ID;
					}
					else
					{
						this._CalificadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		[Association(Name="Jugador_Calificacion1", Storage="_Jugador1", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador1
		{
			get
			{
				return this._Jugador1.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador1.Entity;
				if (((previousValue != value) 
							|| (this._Jugador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador1.Entity = null;
						previousValue.Calificacions1.Remove(this);
					}
					this._Jugador1.Entity = value;
					if ((value != null))
					{
						value.Calificacions1.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador1");
				}
			}
		}
		
		[Association(Name="Partido_Calificacion", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Calificacions.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Calificacions.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.CalificacionPendiente")]
	public partial class CalificacionPendiente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _CalificadorID;
		
		private decimal _PartidoID;
		
		private decimal _JugadorID;
		
		private EntityRef<Jugador> _Jugador;
		
		private EntityRef<Jugador> _Jugador1;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCalificadorIDChanging(decimal value);
    partial void OnCalificadorIDChanged();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    #endregion
		
		public CalificacionPendiente()
		{
			this._Jugador = default(EntityRef<Jugador>);
			this._Jugador1 = default(EntityRef<Jugador>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_CalificadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal CalificadorID
		{
			get
			{
				return this._CalificadorID;
			}
			set
			{
				if ((this._CalificadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCalificadorIDChanging(value);
					this.SendPropertyChanging();
					this._CalificadorID = value;
					this.SendPropertyChanged("CalificadorID");
					this.OnCalificadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Association(Name="Jugador_CalificacionPendiente", Storage="_Jugador", ThisKey="CalificadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.CalificacionPendientes.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.CalificacionPendientes.Add(this);
						this._CalificadorID = value.ID;
					}
					else
					{
						this._CalificadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		[Association(Name="Jugador_CalificacionPendiente1", Storage="_Jugador1", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador1
		{
			get
			{
				return this._Jugador1.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador1.Entity;
				if (((previousValue != value) 
							|| (this._Jugador1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador1.Entity = null;
						previousValue.CalificacionPendientes1.Remove(this);
					}
					this._Jugador1.Entity = value;
					if ((value != null))
					{
						value.CalificacionPendientes1.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador1");
				}
			}
		}
		
		[Association(Name="Partido_CalificacionPendiente", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.CalificacionPendientes.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.CalificacionPendientes.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.Infraccion")]
	public partial class Infraccion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PartidoID;
		
		private decimal _JugadorID;
		
		private System.DateTime _Fecha;
		
		private string _Motivo;
		
		private EntityRef<Jugador> _Jugador;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnMotivoChanging(string value);
    partial void OnMotivoChanged();
    #endregion
		
		public Infraccion()
		{
			this._Jugador = default(EntityRef<Jugador>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha", DbType="Date NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Column(Storage="_Motivo", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Motivo
		{
			get
			{
				return this._Motivo;
			}
			set
			{
				if ((this._Motivo != value))
				{
					this.OnMotivoChanging(value);
					this.SendPropertyChanging();
					this._Motivo = value;
					this.SendPropertyChanged("Motivo");
					this.OnMotivoChanged();
				}
			}
		}
		
		[Association(Name="Jugador_Infraccion", Storage="_Jugador", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.Infraccions.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.Infraccions.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		[Association(Name="Partido_Infraccion", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Infraccions.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Infraccions.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.Inscripcion")]
	public partial class Inscripcion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PartidoID;
		
		private decimal _JugadorID;
		
		private System.DateTime _Fecha;
		
		private EntityRef<Jugador> _Jugador;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Inscripcion()
		{
			this._Jugador = default(EntityRef<Jugador>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Association(Name="Jugador_Inscripcion", Storage="_Jugador", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.Inscripcions.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.Inscripcions.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		[Association(Name="Partido_Inscripcion", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.Inscripcions.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.Inscripcions.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.InscripcionPendiente")]
	public partial class InscripcionPendiente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PartidoID;
		
		private string _PersonaNombre;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnPersonaNombreChanging(string value);
    partial void OnPersonaNombreChanged();
    #endregion
		
		public InscripcionPendiente()
		{
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_PersonaNombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PersonaNombre
		{
			get
			{
				return this._PersonaNombre;
			}
			set
			{
				if ((this._PersonaNombre != value))
				{
					this.OnPersonaNombreChanging(value);
					this.SendPropertyChanging();
					this._PersonaNombre = value;
					this.SendPropertyChanged("PersonaNombre");
					this.OnPersonaNombreChanged();
				}
			}
		}
		
		[Association(Name="Partido_InscripcionPendiente", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.InscripcionPendientes.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.InscripcionPendientes.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.Jugador")]
	public partial class Jugador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private string _Nombre;
		
		private System.DateTime _FechaNacimiento;
		
		private string _Mail;
		
		private byte _Handicap;
		
		private EntitySet<Calificacion> _Calificacions;
		
		private EntitySet<Calificacion> _Calificacions1;
		
		private EntitySet<CalificacionPendiente> _CalificacionPendientes;
		
		private EntitySet<CalificacionPendiente> _CalificacionPendientes1;
		
		private EntitySet<Infraccion> _Infraccions;
		
		private EntitySet<Inscripcion> _Inscripcions;
		
		private EntitySet<JugadorAmigo> _JugadorAmigos;
		
		private EntitySet<PartidoEquipo> _PartidoEquipos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnFechaNacimientoChanging(System.DateTime value);
    partial void OnFechaNacimientoChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnHandicapChanging(byte value);
    partial void OnHandicapChanged();
    #endregion
		
		public Jugador()
		{
			this._Calificacions = new EntitySet<Calificacion>(new Action<Calificacion>(this.attach_Calificacions), new Action<Calificacion>(this.detach_Calificacions));
			this._Calificacions1 = new EntitySet<Calificacion>(new Action<Calificacion>(this.attach_Calificacions1), new Action<Calificacion>(this.detach_Calificacions1));
			this._CalificacionPendientes = new EntitySet<CalificacionPendiente>(new Action<CalificacionPendiente>(this.attach_CalificacionPendientes), new Action<CalificacionPendiente>(this.detach_CalificacionPendientes));
			this._CalificacionPendientes1 = new EntitySet<CalificacionPendiente>(new Action<CalificacionPendiente>(this.attach_CalificacionPendientes1), new Action<CalificacionPendiente>(this.detach_CalificacionPendientes1));
			this._Infraccions = new EntitySet<Infraccion>(new Action<Infraccion>(this.attach_Infraccions), new Action<Infraccion>(this.detach_Infraccions));
			this._Inscripcions = new EntitySet<Inscripcion>(new Action<Inscripcion>(this.attach_Inscripcions), new Action<Inscripcion>(this.detach_Inscripcions));
			this._JugadorAmigos = new EntitySet<JugadorAmigo>(new Action<JugadorAmigo>(this.attach_JugadorAmigos), new Action<JugadorAmigo>(this.detach_JugadorAmigos));
			this._PartidoEquipos = new EntitySet<PartidoEquipo>(new Action<PartidoEquipo>(this.attach_PartidoEquipos), new Action<PartidoEquipo>(this.detach_PartidoEquipos));
			OnCreated();
		}
		
		[Column(Storage="_ID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[Column(Storage="_FechaNacimiento", DbType="Date NOT NULL")]
		public System.DateTime FechaNacimiento
		{
			get
			{
				return this._FechaNacimiento;
			}
			set
			{
				if ((this._FechaNacimiento != value))
				{
					this.OnFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._FechaNacimiento = value;
					this.SendPropertyChanged("FechaNacimiento");
					this.OnFechaNacimientoChanged();
				}
			}
		}
		
		[Column(Storage="_Mail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[Column(Storage="_Handicap", DbType="TinyInt NOT NULL")]
		public byte Handicap
		{
			get
			{
				return this._Handicap;
			}
			set
			{
				if ((this._Handicap != value))
				{
					this.OnHandicapChanging(value);
					this.SendPropertyChanging();
					this._Handicap = value;
					this.SendPropertyChanged("Handicap");
					this.OnHandicapChanged();
				}
			}
		}
		
		[Association(Name="Jugador_Calificacion", Storage="_Calificacions", ThisKey="ID", OtherKey="CalificadorID")]
		public EntitySet<Calificacion> Calificacions
		{
			get
			{
				return this._Calificacions;
			}
			set
			{
				this._Calificacions.Assign(value);
			}
		}
		
		[Association(Name="Jugador_Calificacion1", Storage="_Calificacions1", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<Calificacion> Calificacions1
		{
			get
			{
				return this._Calificacions1;
			}
			set
			{
				this._Calificacions1.Assign(value);
			}
		}
		
		[Association(Name="Jugador_CalificacionPendiente", Storage="_CalificacionPendientes", ThisKey="ID", OtherKey="CalificadorID")]
		public EntitySet<CalificacionPendiente> CalificacionPendientes
		{
			get
			{
				return this._CalificacionPendientes;
			}
			set
			{
				this._CalificacionPendientes.Assign(value);
			}
		}
		
		[Association(Name="Jugador_CalificacionPendiente1", Storage="_CalificacionPendientes1", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<CalificacionPendiente> CalificacionPendientes1
		{
			get
			{
				return this._CalificacionPendientes1;
			}
			set
			{
				this._CalificacionPendientes1.Assign(value);
			}
		}
		
		[Association(Name="Jugador_Infraccion", Storage="_Infraccions", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<Infraccion> Infraccions
		{
			get
			{
				return this._Infraccions;
			}
			set
			{
				this._Infraccions.Assign(value);
			}
		}
		
		[Association(Name="Jugador_Inscripcion", Storage="_Inscripcions", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<Inscripcion> Inscripcions
		{
			get
			{
				return this._Inscripcions;
			}
			set
			{
				this._Inscripcions.Assign(value);
			}
		}
		
		[Association(Name="Jugador_JugadorAmigo", Storage="_JugadorAmigos", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<JugadorAmigo> JugadorAmigos
		{
			get
			{
				return this._JugadorAmigos;
			}
			set
			{
				this._JugadorAmigos.Assign(value);
			}
		}
		
		[Association(Name="Jugador_PartidoEquipo", Storage="_PartidoEquipos", ThisKey="ID", OtherKey="JugadorID")]
		public EntitySet<PartidoEquipo> PartidoEquipos
		{
			get
			{
				return this._PartidoEquipos;
			}
			set
			{
				this._PartidoEquipos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
		
		private void attach_Calificacions1(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador1 = this;
		}
		
		private void detach_Calificacions1(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador1 = null;
		}
		
		private void attach_CalificacionPendientes(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_CalificacionPendientes(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
		
		private void attach_CalificacionPendientes1(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Jugador1 = this;
		}
		
		private void detach_CalificacionPendientes1(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Jugador1 = null;
		}
		
		private void attach_Infraccions(Infraccion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_Infraccions(Infraccion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
		
		private void attach_Inscripcions(Inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_Inscripcions(Inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
		
		private void attach_JugadorAmigos(JugadorAmigo entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_JugadorAmigos(JugadorAmigo entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
		
		private void attach_PartidoEquipos(PartidoEquipo entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = this;
		}
		
		private void detach_PartidoEquipos(PartidoEquipo entity)
		{
			this.SendPropertyChanging();
			entity.Jugador = null;
		}
	}
	
	[Table(Name="dds_esquema.JugadorAmigo")]
	public partial class JugadorAmigo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _JugadorID;
		
		private string _AmigoNombre;
		
		private EntityRef<Jugador> _Jugador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    partial void OnAmigoNombreChanging(string value);
    partial void OnAmigoNombreChanged();
    #endregion
		
		public JugadorAmigo()
		{
			this._Jugador = default(EntityRef<Jugador>);
			OnCreated();
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_AmigoNombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AmigoNombre
		{
			get
			{
				return this._AmigoNombre;
			}
			set
			{
				if ((this._AmigoNombre != value))
				{
					this.OnAmigoNombreChanging(value);
					this.SendPropertyChanging();
					this._AmigoNombre = value;
					this.SendPropertyChanged("AmigoNombre");
					this.OnAmigoNombreChanged();
				}
			}
		}
		
		[Association(Name="Jugador_JugadorAmigo", Storage="_Jugador", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.JugadorAmigos.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.JugadorAmigos.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.Partido")]
	public partial class Partido : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _ID;
		
		private decimal _AdministradorID;
		
		private System.DateTime _Fecha;
		
		private EntitySet<Rechazo> _Rechazos;
		
		private EntitySet<Calificacion> _Calificacions;
		
		private EntitySet<CalificacionPendiente> _CalificacionPendientes;
		
		private EntitySet<Infraccion> _Infraccions;
		
		private EntitySet<Inscripcion> _Inscripcions;
		
		private EntitySet<InscripcionPendiente> _InscripcionPendientes;
		
		private EntitySet<PartidoEquipo> _PartidoEquipos;
		
		private EntityRef<Administrador> _Administrador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(decimal value);
    partial void OnIDChanged();
    partial void OnAdministradorIDChanging(decimal value);
    partial void OnAdministradorIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    #endregion
		
		public Partido()
		{
			this._Rechazos = new EntitySet<Rechazo>(new Action<Rechazo>(this.attach_Rechazos), new Action<Rechazo>(this.detach_Rechazos));
			this._Calificacions = new EntitySet<Calificacion>(new Action<Calificacion>(this.attach_Calificacions), new Action<Calificacion>(this.detach_Calificacions));
			this._CalificacionPendientes = new EntitySet<CalificacionPendiente>(new Action<CalificacionPendiente>(this.attach_CalificacionPendientes), new Action<CalificacionPendiente>(this.detach_CalificacionPendientes));
			this._Infraccions = new EntitySet<Infraccion>(new Action<Infraccion>(this.attach_Infraccions), new Action<Infraccion>(this.detach_Infraccions));
			this._Inscripcions = new EntitySet<Inscripcion>(new Action<Inscripcion>(this.attach_Inscripcions), new Action<Inscripcion>(this.detach_Inscripcions));
			this._InscripcionPendientes = new EntitySet<InscripcionPendiente>(new Action<InscripcionPendiente>(this.attach_InscripcionPendientes), new Action<InscripcionPendiente>(this.detach_InscripcionPendientes));
			this._PartidoEquipos = new EntitySet<PartidoEquipo>(new Action<PartidoEquipo>(this.attach_PartidoEquipos), new Action<PartidoEquipo>(this.detach_PartidoEquipos));
			this._Administrador = default(EntityRef<Administrador>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_AdministradorID", DbType="Decimal(18,0) NOT NULL")]
		public decimal AdministradorID
		{
			get
			{
				return this._AdministradorID;
			}
			set
			{
				if ((this._AdministradorID != value))
				{
					if (this._Administrador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAdministradorIDChanging(value);
					this.SendPropertyChanging();
					this._AdministradorID = value;
					this.SendPropertyChanged("AdministradorID");
					this.OnAdministradorIDChanged();
				}
			}
		}
		
		[Column(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[Association(Name="Partido_Rechazo", Storage="_Rechazos", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<Rechazo> Rechazos
		{
			get
			{
				return this._Rechazos;
			}
			set
			{
				this._Rechazos.Assign(value);
			}
		}
		
		[Association(Name="Partido_Calificacion", Storage="_Calificacions", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<Calificacion> Calificacions
		{
			get
			{
				return this._Calificacions;
			}
			set
			{
				this._Calificacions.Assign(value);
			}
		}
		
		[Association(Name="Partido_CalificacionPendiente", Storage="_CalificacionPendientes", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<CalificacionPendiente> CalificacionPendientes
		{
			get
			{
				return this._CalificacionPendientes;
			}
			set
			{
				this._CalificacionPendientes.Assign(value);
			}
		}
		
		[Association(Name="Partido_Infraccion", Storage="_Infraccions", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<Infraccion> Infraccions
		{
			get
			{
				return this._Infraccions;
			}
			set
			{
				this._Infraccions.Assign(value);
			}
		}
		
		[Association(Name="Partido_Inscripcion", Storage="_Inscripcions", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<Inscripcion> Inscripcions
		{
			get
			{
				return this._Inscripcions;
			}
			set
			{
				this._Inscripcions.Assign(value);
			}
		}
		
		[Association(Name="Partido_InscripcionPendiente", Storage="_InscripcionPendientes", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<InscripcionPendiente> InscripcionPendientes
		{
			get
			{
				return this._InscripcionPendientes;
			}
			set
			{
				this._InscripcionPendientes.Assign(value);
			}
		}
		
		[Association(Name="Partido_PartidoEquipo", Storage="_PartidoEquipos", ThisKey="ID", OtherKey="PartidoID")]
		public EntitySet<PartidoEquipo> PartidoEquipos
		{
			get
			{
				return this._PartidoEquipos;
			}
			set
			{
				this._PartidoEquipos.Assign(value);
			}
		}
		
		[Association(Name="Administrador_Partido", Storage="_Administrador", ThisKey="AdministradorID", OtherKey="ID", IsForeignKey=true)]
		public Administrador Administrador
		{
			get
			{
				return this._Administrador.Entity;
			}
			set
			{
				Administrador previousValue = this._Administrador.Entity;
				if (((previousValue != value) 
							|| (this._Administrador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Administrador.Entity = null;
						previousValue.Partidos.Remove(this);
					}
					this._Administrador.Entity = value;
					if ((value != null))
					{
						value.Partidos.Add(this);
						this._AdministradorID = value.ID;
					}
					else
					{
						this._AdministradorID = default(decimal);
					}
					this.SendPropertyChanged("Administrador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rechazos(Rechazo entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Rechazos(Rechazo entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Calificacions(Calificacion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_CalificacionPendientes(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_CalificacionPendientes(CalificacionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_Infraccions(Infraccion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Infraccions(Infraccion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_Inscripcions(Inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_Inscripcions(Inscripcion entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_InscripcionPendientes(InscripcionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_InscripcionPendientes(InscripcionPendiente entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
		
		private void attach_PartidoEquipos(PartidoEquipo entity)
		{
			this.SendPropertyChanging();
			entity.Partido = this;
		}
		
		private void detach_PartidoEquipos(PartidoEquipo entity)
		{
			this.SendPropertyChanging();
			entity.Partido = null;
		}
	}
	
	[Table(Name="dds_esquema.PartidoEquipo")]
	public partial class PartidoEquipo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _PartidoID;
		
		private decimal _JugadorID;
		
		private char _Equipo;
		
		private EntityRef<Jugador> _Jugador;
		
		private EntityRef<Partido> _Partido;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartidoIDChanging(decimal value);
    partial void OnPartidoIDChanged();
    partial void OnJugadorIDChanging(decimal value);
    partial void OnJugadorIDChanged();
    partial void OnEquipoChanging(char value);
    partial void OnEquipoChanged();
    #endregion
		
		public PartidoEquipo()
		{
			this._Jugador = default(EntityRef<Jugador>);
			this._Partido = default(EntityRef<Partido>);
			OnCreated();
		}
		
		[Column(Storage="_PartidoID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal PartidoID
		{
			get
			{
				return this._PartidoID;
			}
			set
			{
				if ((this._PartidoID != value))
				{
					if (this._Partido.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPartidoIDChanging(value);
					this.SendPropertyChanging();
					this._PartidoID = value;
					this.SendPropertyChanged("PartidoID");
					this.OnPartidoIDChanged();
				}
			}
		}
		
		[Column(Storage="_JugadorID", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal JugadorID
		{
			get
			{
				return this._JugadorID;
			}
			set
			{
				if ((this._JugadorID != value))
				{
					if (this._Jugador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJugadorIDChanging(value);
					this.SendPropertyChanging();
					this._JugadorID = value;
					this.SendPropertyChanged("JugadorID");
					this.OnJugadorIDChanged();
				}
			}
		}
		
		[Column(Storage="_Equipo", DbType="Char(1) NOT NULL")]
		public char Equipo
		{
			get
			{
				return this._Equipo;
			}
			set
			{
				if ((this._Equipo != value))
				{
					this.OnEquipoChanging(value);
					this.SendPropertyChanging();
					this._Equipo = value;
					this.SendPropertyChanged("Equipo");
					this.OnEquipoChanged();
				}
			}
		}
		
		[Association(Name="Jugador_PartidoEquipo", Storage="_Jugador", ThisKey="JugadorID", OtherKey="ID", IsForeignKey=true)]
		public Jugador Jugador
		{
			get
			{
				return this._Jugador.Entity;
			}
			set
			{
				Jugador previousValue = this._Jugador.Entity;
				if (((previousValue != value) 
							|| (this._Jugador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Jugador.Entity = null;
						previousValue.PartidoEquipos.Remove(this);
					}
					this._Jugador.Entity = value;
					if ((value != null))
					{
						value.PartidoEquipos.Add(this);
						this._JugadorID = value.ID;
					}
					else
					{
						this._JugadorID = default(decimal);
					}
					this.SendPropertyChanged("Jugador");
				}
			}
		}
		
		[Association(Name="Partido_PartidoEquipo", Storage="_Partido", ThisKey="PartidoID", OtherKey="ID", IsForeignKey=true)]
		public Partido Partido
		{
			get
			{
				return this._Partido.Entity;
			}
			set
			{
				Partido previousValue = this._Partido.Entity;
				if (((previousValue != value) 
							|| (this._Partido.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Partido.Entity = null;
						previousValue.PartidoEquipos.Remove(this);
					}
					this._Partido.Entity = value;
					if ((value != null))
					{
						value.PartidoEquipos.Add(this);
						this._PartidoID = value.ID;
					}
					else
					{
						this._PartidoID = default(decimal);
					}
					this.SendPropertyChanged("Partido");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dds_esquema.[Promedio todos los partidos]")]
	public partial class Promedio_todos_los_partido
	{
		
		private decimal _Jugador;
		
		private System.Nullable<int> _Promedio;
		
		public Promedio_todos_los_partido()
		{
		}
		
		[Column(Storage="_Jugador", DbType="Decimal(18,0) NOT NULL")]
		public decimal Jugador
		{
			get
			{
				return this._Jugador;
			}
			set
			{
				if ((this._Jugador != value))
				{
					this._Jugador = value;
				}
			}
		}
		
		[Column(Storage="_Promedio", DbType="Int")]
		public System.Nullable<int> Promedio
		{
			get
			{
				return this._Promedio;
			}
			set
			{
				if ((this._Promedio != value))
				{
					this._Promedio = value;
				}
			}
		}
	}
	
	[Table(Name="dds_esquema.[Promedio Ultimo Partido]")]
	public partial class Promedio_Ultimo_Partido
	{
		
		private decimal _Jugador;
		
		private System.Nullable<int> _Promedio;
		
		public Promedio_Ultimo_Partido()
		{
		}
		
		[Column(Storage="_Jugador", DbType="Decimal(18,0) NOT NULL")]
		public decimal Jugador
		{
			get
			{
				return this._Jugador;
			}
			set
			{
				if ((this._Jugador != value))
				{
					this._Jugador = value;
				}
			}
		}
		
		[Column(Storage="_Promedio", DbType="Int")]
		public System.Nullable<int> Promedio
		{
			get
			{
				return this._Promedio;
			}
			set
			{
				if ((this._Promedio != value))
				{
					this._Promedio = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
